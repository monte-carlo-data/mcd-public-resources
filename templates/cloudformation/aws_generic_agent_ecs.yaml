AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  VpcSubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: 'The Subnet IDs for the ECS Service'

  SecurityGroupId:
    Type: String
    Description: 'The Security Group ID for the ECS Service'

Resources:
  McAgentCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterName: 'mc-agent-cluster'
      Tags:
        - Key: 'mcd:agent:platform'
          Value: 'aws_generic'

  McAgentTaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      Family: 'mc-agent-task'
      NetworkMode: 'awsvpc'
      RequiresCompatibilities: ['FARGATE']
      Cpu: '2048'
      Memory: '6144'
      ExecutionRoleArn: !GetAtt McAgentTaskRole.Arn
      TaskRoleArn: !GetAtt McAgentTaskRole.Arn
      ContainerDefinitions:
        - Name: 'mc-agent-container'
          Image: 'docker.io/montecarlodata/agent:1.3.5-aws-generic'
          Essential: true
          PortMappings:
            - ContainerPort: 8081
              Protocol: tcp
          Environment:
            - Name: "MCD_AGENT_CLOUD_PLATFORM"
              Value: "AWS_GENERIC"
            - Name: "MCD_LOG_GROUP_ID"
              Value: "<ARN_of_your_AWS_log_group>"
            - Name: "MCD_STORAGE"
              Value: "S3"
            - Name: "MCD_STORAGE_BUCKET_NAME"
              Value: !Ref McAgentS3Bucket
            - Name: "PORT"
              Value: "8081"
            - Name: "GUNICORN_TIMEOUT"
              Value: "0"
            - Name: "GUNICORN_THREADS"
              Value: "8"
            - Name: "GUNICORN_WORKERS"
              Value: "4"
          HealthCheck:
            Command: ["CMD-SHELL", "curl -f http://localhost:8081/ || exit 1"]
            Interval: 30
            Timeout: 5
            Retries: 3
            StartPeriod: 0

  McAgentService:
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster: !Ref McAgentCluster
      DesiredCount: 1
      LaunchType: 'FARGATE'
      TaskDefinition: !Ref McAgentTaskDefinition
      ServiceName: 'mc-agent-service'
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets: !Ref VpcSubnetIds
          SecurityGroups:
            - !Ref SecurityGroupId
          AssignPublicIp: ENABLED
      Tags:
        - Key: 'mcd:agent:platform'
          Value: 'aws_generic'

  McAgentS3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: 'mc-agent-s3-bucket'
      Tags:
        - Key: 'mcd:agent:platform'
          Value: 'aws_generic'

  McAgentTaskRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'ecs-tasks.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'mc-agent-s3-access-policy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: 'StorageBucketAccess'
                Effect: 'Allow'
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:DeleteObject'
                  - 's3:ListBucket'
                  - 's3:GetBucketPublicAccessBlock'
                  - 's3:GetBucketPolicyStatus'
                  - 's3:GetBucketAcl'
                Resource:
                  - !Sub 'arn:aws:s3:::${McAgentS3Bucket}'
                  - !Sub 'arn:aws:s3:::${McAgentS3Bucket}/*'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Tags:
        - Key: 'mcd:agent:platform'
          Value: 'aws_generic'